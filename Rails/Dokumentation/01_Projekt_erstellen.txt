1. rails new Library

2.	1) gem 'foundation-rails' #unter Gemfile hinzufuegen
	2) bundle install #in Konsole
	3) rails g foundation:install #in Konsole -> Y
	4) <%= javascript_include_tag "vendor/modernizr" %> #in app/views/layouts/application.html.erb
	5) unter app/assets/stylesheets unter application.css '*= require foundation' hinzufuegen

3. rails g scaffold author firstname:string lastname:string

4. rails g scaffold book title:string year:date description:text author:references   #Author_id macht er Automatisch wegen der references

5. routes.rb ->
		root "book#index"		

		resources :author do 
  			resources :book
  		end

6.	models/author ->
		has_many :books

7.	author/index
		<td><%= link_to 'Books', author_books_path(author.id) %>

8. seeds.rb ->
		Author.create(firstname: "Vorname 1", lastname: "Nachname 1") 
		Author.create(firstname: "Vorname 2", lastname: "Nachname 2")
		Author.create(firstname: "Vorname 3", lastname: "Nachname 3")
		Book.create(author_id: 1, title: "Titel 1", year: 1960, description: "Das ist ein Buch aus dem Jahr 1960")
		Book.create(author_id: 2, title: "Titel 2", year: 1970, description: "Das ist ein Buch aus dem Jahr 1970")
		Book.create(author_id: 3, title: "Titel 3", year: 1980, description: "Das ist ein Buch aus dem Jahr 1980")
		Book.create(author_id: 4, title: "Titel 4", year: 1990, description: "Das ist ein Buch aus dem Jahr 1990")
		Book.create(author_id: 5, title: "Titel 5", year: 2000, description: "Das ist ein Buch aus dem Jahr 2000")

9. rails g scaffold user login:string email:string admin:boolean birthdate:date active:boolean password:digest

10.	1) gem 'bcrypt', '~> 3.1.7'    #Kommentierung entfernen
	2) bundle install

11.	1) rails g controller sessions
	2) routes.rb ->
			resource :session
	3) views/sessions/new.html.erb (ERSTELLEN)
		<h1>Sign In</h1>

		<%= form_tag(session_path) do %>
			<fieldset>
				
			<div class="row">
				
					<div class="medium-4 columns">
						<%= label_tag :email %>
					</div>
					<div class="medium-8 columns">
						<%= email_field_tag :email, params[:email], autofocus: true %> 
					</div>
				</div>

				<div class="row">
				
					<div class="medium-4 columns">
						<%= label_tag :password %>
					</div>
					<div class="medium-8 columns">
						<%= password_field_tag :password, nil %> 
					</div>
				</div>

				<div class="row">
				
					<div class="medium-4 columns">
				
					</div>
					<div class="medium-8 columns">
						<%= submit_tag 'Login' %>
					</div>
				</div>

			</fieldset>

		<% end %>

	4) sessions_controller.rb
			def new
			end

			def create
				user = User.find_by(email: params[:email])
				if user && user.authenticate(params[:password])
					session[:user_id] = user.id
					flash[:notice] = "Welcome back #{user.login.capitalize}!"
					redirect_to root_path
				else
					flash.now[:alert] = "Ung√ºltige Anmeldedaten!"
					render :new
				end
			end

			def destroy
		  		session[:user_id] = nil
		  		redirect_to root_path, notice: "Ausgeloggt. Ice Ice BABY!"
			end

	5) application_controller
		def current_user
  			@current_user = User.find(session[:user_id]) if session[:user_id]
		end

	  helper_method :current_user

	6) _top_bar.html.erb
		  <div class="top-bar-right">
		    <ul class="menu">
		    <% if current_user %>
		      <%= current_user.name.capitalize %>
		        <%= link_to 'LogOut', session_path, method: :delete %>
		        <% else %>
		    <li><%= link_to 'Sign Up', signup_path %></li>
		    <li><%= link_to 'Sign In', new_session_path %></li>
		<% end %>

	7) routes.rb ->
		get 'signup' => 'users#new'


12.	1) controllers/application_controller

				def require_signin
					unless current_user
					redirect_to new_session_url, alert: "Please sign in first!"
					end
			end

	2) controllers/events_controller.rb
			before_action :require_signin, except: [:index] #Nicht eingeloggt -> Nur Inhalt der Tabelle "Index" sichtbar

	3) controllers/users_controller.rb
			before_action :require_signin, except: [:new, :create]

	4) controllers/registration_controller.rb
			before_action :require_signin

	5) controllers/users_controller.rb
			before_action :require_correct_user, only: [:edit, :update, :destroy]

	6) Unter create:
			session[:user_id] = @user.id

	7) Neue Methode:
		def require_correct_user
      		unless current_user == @user
        	redirect_to users_url, alert: "Du, du, du. Darfst du das?!"
      		end 
		end

13. rails g scaffold lending lending_date:date return_date:date book:references user:references

14. models/user.rb
		has_many :lendings

	models/book.rb
		has_many :lendings

15.	