Vererbung:
		Die OOP basiert auf dem Prinzip der Überschaubarkeit. 
		Deshalb wurde die Vererbung als grundlegendes Merkmal eingeführt. 
		Erbt eine Klasse von einer anderen Klasse, z.B.

			class LKw < Car

		dann stehen in der Erbenden Klasse alle Methoden und Eigenschaften
		zur Verfügung, die in der Elternklasse definiert wurden. Beispiel:

			class Car
				attr_accessor :ps
			end

			class Lkw < Car

			end

			obj = Lkw.new
			obj.ps = 50
			puts obj.ps



Zugriffsmodifizierer:
		Es kommt vor, dass bestimmte Methoden in der Elternklasse 
		nur innerhalb dieser Klasse benutzt werden sollen. 
		Dann werden diese als 'private' gekennzeichnet.
		Falls eine Methode in der Elternklasse nicht öffentlich sein soll,
		aber vererbt werden soll, dann wird diese als 'protected' gekennzeichnet.
		Falls kein Zugriffsmodifizierer angegeben ist, gelten die definierten 
		Methoden als  'public'. Beispiel:

			class Car

#################### Von außen erreichbar: public	####################			
			
				attr_accessor :ps

				def beschleunigen
					...
				end

#################### Von Kindklassen erreichbar: protected ####################

			protected
				def umwandeln_in_kmh(var)
					...
				end

#################### Nur innerhalb der Elternklasse aufrufbar: private ####################

			private
				def irgendwas
					...
				end
			end



-------------------------------------------------------------------------------------



Zuhause noch was machen !! 




-------------------------------------

-------------------------------------

-------------------------------------

